{"version":3,"sources":["components/img/very_happy.svg","components/img/happy_face.svg","components/img/neutral.svg","components/img/sad_face.svg","components/img/angry.svg","components/TextEditor/TextEditor.js","components/TextEditor/Formatting/BoldMark.js","components/TextEditor/Formatting/ItalicMark.js","components/TextEditor/Formatting/UnderlineMark.js","components/TextEditor/Formatting/CodeBlock.js","components/StartPage/StartPage.js","components/MoodPicker/MoodPicker.js","components/MoodDatePicker/MoodDatePicker.js","components/Stats/BarChart.js","components/EntryLogger.js","components/Entries/Entries.js","components/Activities/Activities.js","components/ActivityLogo/ActivityLogo.js","components/Navigation/Navigation.js","components/Stats/Stats.js","components/ThoughtDetangler/ThoughtDetangler.js","components/ThoughtDetangler/SituationForm.js","components/ThoughtDetangler/InitialThought.js","components/ThoughtDetangler/Pros.js","components/ThoughtDetangler/Cons.js","components/ThoughtDetangler/BalancedThought.js","components/OptionsMenu/OptionsMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TextEditor","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","storeItems","basicActivities","pickActivities","chosenActivities","storeOrEditEntry","react_default","a","createElement","Container_default","fluid","className","Activities_Activities_Activities","slate_react_es","placeholder","onChange","onKeyDown","renderNode","renderMark","react_router_dom","to","onClick","React","Component","BoldMark","children","ItalicMark","UnderlineMark","CodeBlock","attributes","StartPage","_Component","chooseMood","moodList","chosenMood","pickedDate","MoodPicker_MoodPicker_MoodPicker","MoodPicker","map","mood","src","label","activeSrc","concat","id","alt","displayMoodList","BarChart","barData","victory_chart","domainPadding","domain","y","style","parent","width","victory_group","colorScale","victory_bar","data","initialValue","Value","fromJSON","document","nodes","object","type","leaves","EntryLogger","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","state","textEditorNote","_ref","setState","storeCurrentNote","text","index","entryId","entries","editEntry","moodDatas","getMoodLog","newMoodItem","date","notes","activities","findIndex","entry","console","log","push","entryItems","localStorage","setItem","JSON","stringify","moodCounter","resetValues","resetEditor","note","event","editor","next","ctrlKey","preventDefault","toggleMark","isCode","blocks","some","block","setBlocks","mark","BoldMark_BoldMark","ItalicMark_ItalicMark","UnderlineMark_UnderlineMark","node","CodeBlock_CodeBlock","_this2","_this$props2","react_router","path","render","TextEditor_TextEditor_TextEditor","Entries","deleteEntry","getColorOfMood","moodData","sort","b","displayedImage","item","Date","toLocaleDateString","x","ActivityLogo_ActivityLogo","activity","OptionsMenu_OptionsMenu_OptionsMenu","displayEntryItems","library","add","faBriefcase","faVolleyballBall","faUsers","faUtensils","faShoppingCart","faHeart","faBook","Activities","Col_default","xs","md","ToggleButtonGroup_default","num","ToggleButton_default","index_es","icon","faClass","Row_default","displayActivities","ActivityLogo","displayActivityLogo","makeIcon","find","el","Navigation","toggleHamburgerMenu","objectSpread","isMenuOpen","getHeaderClasses","getMenuItemClasses","Stats","moodLog","Fragment","BarChart_BarChart","initialState","situation","initialThought","pros","cons","balancedThought","SituationForm","title","name","InitialThought","onSubmit","Pros","Cons","BalancedThought","faEllipsisV","OptionsMenu","Dropdown_default","alignRight","Toggle","variant","Menu","lib","Item","Awesome","color","Happy","Okay","Sad","Angry","App","e","clickedMood","target","parse","getItem","moodCount","filter","clickedActivity","includes","uniqueActivities","updatedActivities","_this$state","moodContainer","remainingEntries","updatedEntries","entryNote","handleDateChange","prepareBarChart","moods","now","_this$state2","Navigation_Navigation_Navigation","exact","StartPage_StartPage_StartPage","Entries_Entries_Entries","Stats_Stats","EntryLogger_EntryLogger","Boolean","window","location","hostname","match","ReactDOM","basename","process","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6059c109.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/very_happy.4ec67b09.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy_face.cc2cdf94.svg\";","module.exports = __webpack_public_path__ + \"static/media/neutral.9c6f16cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad_face.043c3d49.svg\";","module.exports = __webpack_public_path__ + \"static/media/angry.a165287a.svg\";","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { Editor } from 'slate-react';\nimport { Link } from \"react-router-dom\";\nimport './TextEditor.scss'\nimport { Activities } from '../../components/compIndex'\n\nexport class TextEditor extends React.Component {\n    render() {\n        const { storeItems, basicActivities, pickActivities, chosenActivities, storeOrEditEntry } = this.props\n        \n        return (\n            <Container fluid>\n                <h1 className=\"page-title\"> What have you been up to? </h1>\n                <Activities \n                    pickActivities={ pickActivities }\n                    basicActivities={ basicActivities }\n                    chosenActivities={ chosenActivities }\n                />\n                <Editor \n                    className=\"text-editor\"\n                    value={ this.props.value } \n                    placeholder=\"Enter thoughts\"\n                    onChange={ this.props.onChange } \n                    onKeyDown={ this.props.onKeyDown }\n                    renderNode={ this.props.renderNode }\n                    renderMark={ this.props.renderMark }\n                />\n                <div className=\"text-center\">\n                    <Link to=\"/\">\n                        <button className=\"back-button\"> \n                            Back \n                        </button>\n                    </Link>\n                    <Link to=\"/\">\n                        <button onClick={ storeItems } className=\"save-button\"> \n                            Save \n                        </button>\n                    </Link>                \n                </div>\n            </Container>\n        ); \n    }\n}; ","import React from 'react'\n\nexport const BoldMark = props => (\n    <strong>\n        { props.children }\n    </strong>\n);\n\n","import React from 'react'\n\nexport const ItalicMark = props => (\n    <em>\n        { props.children }\n    </em>\n);\n","import React from 'react'\n\nexport const UnderlineMark = props => (\n    <u>\n        { props.children }\n    </u>\n);\n","import React from 'react'\n\nexport const CodeBlock = props => (\n    <pre { ...props.attributes }>\n        <code> { props.children } </code>\n    </pre>\n);\n","import React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport { MoodPicker, MoodDatePicker } from '../../components/compIndex';\nimport { Link } from 'react-router-dom';\nimport './StartPage.scss';\n\nexport class StartPage extends Component {\n    render() {\n        const { chooseMood, moodList, chosenMood, chosenActivities, pickedDate, onChange } = this.props;\n\n        return (\n            <Container fluid>\n                <h1 className='page-title'> How are you feeling today? </h1>\n                {/* <div className='date m-5'>\n                    <div> Date: </div>\n                    <MoodDatePicker \n                        pickedDate={ pickedDate }\n                        handleChange={ onChange }\n                    /> \n                </div> */}\n                <MoodPicker \n                    chooseMood={ chooseMood } \n                    moodList={ moodList } \n                    chosenMood={ chosenMood }\n                />\n                <div className=\"button-container\">\n                    <Link to='/editor' >\n                        <button className=\"continue-button arrow\">\n                            Continue\n                        </button>\n                    </Link>\n                </div>\n            </Container>\n        ) \n    }\n};\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport './MoodPicker.scss';\n\nexport class MoodPicker extends Component {\n    displayMoodList() {\n        const { chooseMood, moodList, chosenMood, chosenActivities } = this.props;\n\n        const displayedMoods = moodList.map( mood => {\n            let src;\n\n            if ( mood.label === chosenMood ) {\n                src = mood.activeSrc\n            } else {    \n                src = mood.src\n            }\n            \n            return (\n                <a \n                    key={ `${ mood.label }_${ src }` } \n                    className=\"mood-link\"\n                >\n                    <img \n                        src={ src }\n                        id={ mood.label } \n                        alt={ mood.label } \n                        onClick={ chooseMood }\n                        className=\"mood-img\"\n                    />\n                </a>\n            ) \n        })\n\n        return displayedMoods;\n    };\n\n    render() {\n        return (\n            <Container>\n                <div className=\"mood-container\">\n                    { this.displayMoodList() }\n                </div>\n            </Container>\n        )\n    }\n};\n","import React, { Component } from 'react'\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './MoodDatePicker.scss'\n\nexport class MoodDatePicker extends Component {\n    render() {\n        const { pickedDate, handleChange } = this.props\n\n        return (\n            <div>\n                <DatePicker\n                    selected={ pickedDate }\n                    onChange={ handleChange }\n                    dateFormat=\"dd/MM/yyyy\"\n                    withPortal\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { VictoryBar, VictoryChart, VictoryGroup } from 'victory';\n\nexport class BarChart extends React.Component {\n    render() {\n        const { barData } = this.props\n        \n        return (\n            <div>\n                <VictoryChart domainPadding={ 30 } \n                            domain={{ y: [0, 10] }}\n                            style={{ parent: { width: \"45em\" } }}\n                            \n                >\n                    <VictoryGroup colorScale={[\"tomato\", \"orange\", \"gold\"]}>\n                        <VictoryBar data={ barData }/>\n                    </VictoryGroup>\n                </VictoryChart>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\n\nimport Container from 'react-bootstrap/Container';\nimport { Value } from 'slate';\nimport { Route } from \"react-router-dom\";\nimport { TextEditor, BoldMark, ItalicMark, UnderlineMark, CodeBlock } from './compIndex.js';\nimport './TextEditor/TextEditor.scss';\n\nconst initialValue = Value.fromJSON({\n    document: {\n        nodes: [\n            {\n                object: 'block',\n                type: 'paragraph',\n                nodes: [\n                    {\n                        object: 'text',\n                        leaves: [\n/*                             {\n                                text: 'Bitch ass paragraph.',\n                            },  */\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n})\nexport class EntryLogger extends Component {\n    // Set initial value when app is first constructed\n    state = {\n        value: initialValue,\n        textEditorNote: null\n    }\n\n    onChange = ({ value }) => {\n        this.setState({ value });\n        this.storeCurrentNote( this.state.value.document.text )\n    }\n\n    // stores mood and date of mood item that is clicked on\n    storeItems = () => {\n        const { chosenMood, pickedDate, chosenActivities, entries, editEntry, entryId } = this.props\n        const { textEditorNote } = this.state\n        \n        let moodDatas = this.props.getMoodLog()\n\n        const newMoodItem = { \n            mood: chosenMood, \n            date: pickedDate, \n            notes: textEditorNote, \n            activities: chosenActivities \n        }\n        \n        // if localStorage is empty, create an array\n        if ( moodDatas === null ) {\n            moodDatas = [ ]\n        }\n\n        let index;\n        \n        if ( entryId ) {\n            index = moodDatas.findIndex( entry => entryId == `${entry.date}_${entry.mood}`);\n\n            if ( index !== -1 ) {\n                moodDatas[index] = newMoodItem;\n            }\n        }\n        console.log( index )\n\n        if ( !entryId || index === -1 ) {\n            console.log( 'pickedDate' )\n            console.log( pickedDate )\n            // push new mood item to localStorage\n            moodDatas.push( newMoodItem )\n        }\n        \n        // update MoodLog by setting it\n        const entryItems = localStorage.setItem( 'moodLog', JSON.stringify( moodDatas ))\n\n        this.setState({\n            entries: entryItems\n        })\n        \n        this.props.moodCounter()\n\n        // resetting value\n        this.props.resetValues()\n        this.resetEditor()\n    };\n\n    storeCurrentNote = note => {\n        this.setState({\n            textEditorNote: note\n        })\n    }\n    \n    resetEditor = () => {\n        this.setState({\n            value: initialValue\n        })\n    }\n\n    // Define a new handler which prints the key that was pressed.\n    onKeyDown = ( event, editor, next ) => {\n        //console.log( event.key )\n        if ( !event.ctrlKey ) return next();\n\n        //Decide what to do based on the key code\n        switch ( event.key ) \n        {\n            case 'b':\n                event.preventDefault()\n                editor.toggleMark('bold')\n            break\n\n            case 'i':\n                event.preventDefault()\n                editor.toggleMark('italic')\n            break\n\n            case 'u':\n                event.preventDefault()\n                editor.toggleMark('underline')\n            break\n\n            case 'c':\n                const isCode = editor.value.blocks.some(block => block.type === 'code')\n                event.preventDefault()\n                editor.setBlocks( isCode ? 'paragraph' : 'code' )\n                break\n\n            default:\n                return next()\n        }\n    }\n\n    // Method to render marks\n    renderMark = ( props, editor, next ) => {\n        switch ( props.mark.type ) \n        {\n            case 'bold':\n                return <BoldMark { ...props } />\n\n            case 'italic':\n                return <ItalicMark { ...props } />\n\n            case 'underline':\n                return <UnderlineMark { ...props } />\n\n            default:\n                return next()\n        }\n    }\n\n    // Method to render nodes for code blocks.\n    renderNode = ( props, editor, next ) => {\n        switch ( props.node.type ) {\n            case 'code':\n                return <CodeBlock { ...props } />\n        \n            default:\n                return next()\n        }\n    }\n\n    render() {\n        const { basicActivities, pickActivities, chosenActivities, entryId } = this.props\n        \n        return (\n            <Container>\n                <Route path=\"/editor\" render={ (props) => <TextEditor \n                        storeItems={ this.storeItems }\n                        storeCurrentNote={ this.storeCurrentNote }\n                        value={ this.state.value } \n                        onChange={ this.onChange } \n                        onKeyDown={ this.onKeyDown }\n                        renderNode={ this.renderNode }\n                        renderMark={ this.renderMark }\n                        basicActivities={ basicActivities }\n                        pickActivities={ pickActivities }\n                        chosenActivities={ chosenActivities }\n                        entryId={ entryId }\n                        storeOrEditEntry={ this.storeOrEditEntry }\n                />} />\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container';\nimport { ActivityLogo, OptionsMenu } from '../../components/compIndex.js';\nimport './Entries.scss'\n\nexport class Entries extends Component {\n    displayEntryItems() {\n        const { moodList, basicActivities, getColorOfMood, deleteEntry, editEntry } = this.props\n\n        let moodData = this.props.getMoodLog()\n        console.log( moodData )\n\n        if ( moodData === null ) {\n            return <h1> No entries </h1>\n        } else {\n            let displayedEntries = moodData\n            .sort(( a, b ) => {\n                if ( a.date > b.date ) {\n                    return -1\n                } else if ( a.date < b.date ) {\n                    return 1\n                } else {\n                    return 0\n                }\n            })\n            .map( entry => {\n                let displayedImage = moodList.map( item => {\n                    let src;\n\n                    if ( entry.mood === item.label ) {\n                        src = item.activeSrc\n                    } else {\n                        return;\n                    }\n\n                    return(\n                        <img src={ src } \n                            className=\"entry-mood-img\"\n                            alt={ item.label } \n                            key={ `${item.label}_${src}` }\n                        />\n                    )\n                })\n\n                return (\n                    <li key={ `${entry.date}_${entry.mood}` } className=\"entry\">\n                        <div className=\"entry-img\"> { displayedImage } </div>\n                        <div className=\"entry-text-content\">\n                            <div className=\"entry-date mb-2\"> \n                                { new Date( entry.date ).toLocaleDateString('en-GB') } \n                            </div>\n                            <h4 className=\"entry-mood\"> \n                                { entry.mood } \n                            </h4>\n                            <div className=\"activity-entry\"> \n                                { entry.activities.map(x => <ActivityLogo\n                                                                    key={`${entry.date}_${x}`}\n                                                                    activity={x} \n                                                                    basicActivities={ basicActivities }\n                                                                    />\n                                                                    )}\n                                {/* { entry.activities.join(\"\\xa0\\xa0\\xa0\\xa0\") }  */}\n                            </div>\n                            { entry.notes \n                                ?  <div className=\"entry-note\" value={ entry.notes }> { entry.notes } </div>\n                                : null\n                            }\n                        </div>\n                        <div className=\"options\">\n                            <OptionsMenu \n                                deleteEntry={ () => deleteEntry(`${entry.date}_${entry.mood}`) } \n                                editEntry={ () => editEntry(`${entry.date}_${entry.mood}`) } \n                            />\n                        </div>\n                    </li>\n                )\n            })\n\n            return displayedEntries\n        }\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <ul className=\"entries\">\n                    { this.displayEntryItems() }\n                </ul>\n            </Container>\n        )\n    } \n}\n","import React, { Component } from 'react'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport './Activities.scss'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBriefcase, faVolleyballBall, faUsers, faUtensils, faShoppingCart, faHeart, faBook } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add( faBriefcase, faVolleyballBall, faUsers, faUtensils, faShoppingCart, faHeart, faBook )\n\nexport class Activities extends Component {\n    displayActivities() {\n        const { basicActivities, pickActivities, chosenActivities } = this.props\n\n        return basicActivities.map( activity => {\n            return  <Col xs={3} md={1}>\n                        <ToggleButtonGroup type=\"checkbox\" key={ activity.num }> \n                            <ToggleButton id={ activity.label }\n                                        onClick={ pickActivities }\n                                        className=\"activity-icon-background\"\n                            >\n                                <FontAwesomeIcon icon={ activity.faClass } className=\"activity-icon\"/>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Col>\n        })\n    }\n\n    render() {\n        return (\n            <Container className=\"text-center\">\n                <Row className=\"justify-content-center\">\n                    { this.displayActivities() }\n                </Row>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBriefcase, faVolleyballBall, faUsers, faUtensils, faShoppingCart, faHeart, faBook } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add( faBriefcase, faVolleyballBall, faUsers, faUtensils, faShoppingCart, faHeart, faBook )\n\nexport class ActivityLogo extends Component {\n    displayActivityLogo = () => {\n        const { basicActivities, activity, icon } = this.props;\n        const makeIcon = x => <FontAwesomeIcon icon={ x } className=\"activity-icon mr-3\"/>;\n\n        if ( icon ) return makeIcon(icon);\n\n        const activityImage = basicActivities.find( el => {\n\n            return el.label === activity\n        }).faClass;\n\n        return makeIcon(activityImage)\n    }\n\n    render() {\n        return (\n            <div className=\"icon-list d-inline\">\n                { this.displayActivityLogo() }\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\n\nimport { Link } from \"react-router-dom\";\nimport './Navigation.scss'\n\nexport class Navigation extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isMenuOpen: false\n        }\n    }\n\n    toggleHamburgerMenu = () => {\n        this.setState({\n            ...this.state,\n            isMenuOpen : !this.state.isMenuOpen\n        })\n    }\n\n    getHeaderClasses = () => `header ${ this.state.isMenuOpen ? \"menu-opened\" : \"\" }`\n    getMenuItemClasses = () => `menu-item ${ this.state.isMenuOpen ? \"menu-opened\" : \"\" }`\n\n    render() {\n        return (\n            <div className={ this.getHeaderClasses() }>\n                <div className=\"burger-container\" onClick={ this.toggleHamburgerMenu }>\n                    <div id=\"burger\">\n                        <div className=\"bar top-bar\"></div>\n                        <div className=\"bar bottom-bar\"></div>\n                    </div>\n                </div>\n                <ul className=\"menu\">\n                    <li className={ this.getMenuItemClasses() } onClick={ this.toggleHamburgerMenu }>\n                        <Link to=\"/\" className=\"nav-link\"> \n                            Home \n                        </Link>\n                    </li>\n                    <li className={ this.getMenuItemClasses() } onClick={ this.toggleHamburgerMenu }>\n                        <Link to=\"/entries\" className=\"nav-link\"> \n                            Entries \n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport Container from 'react-bootstrap/Container';\nimport { BarChart } from '../../components/compIndex'\n\nexport class Stats extends Component {\n    render() {\n        const { barData, moodLog } = this.props\n        \n        return (\n            <Container>\n                <div>\n                    {\n                        !moodLog \n                        ? <h1> No data, GTFO </h1> \n                        : (\n                            <>\n                                <BarChart barData={ barData } />\n                            </>\n                        )\n                    }\n                </div>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport { SituationForm, InitialThought, Pros, Cons, BalancedThought } from '../../components/compIndex.js'\n\nconst initialState = {\n    situation: '',\n    initialThought: '',\n    pros: '',\n    cons: '', \n    balancedThought: ''\n}\n\nexport class ThoughtDetangler extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = initialState\n    };\n\n    addThought = ( ) => {\n        const { situation, initialThought, pros, cons, balancedThought } = this.state\n        \n        localStorage.setItem( \n            'thoughts', \n            JSON.stringify( { \n                situation,\n                initialThought,\n                pros, \n                cons, \n                balancedThought                \n            }) \n        )\n    } \n\n    onChange = e => {\n        let contentOfInput = e.target.value\n        //let nameOfInput = e.target.name\n\n        console.log( contentOfInput )\n        //console.log( nameOfInput )\n    }  \n\n    onClick = e => {\n        e.preventDefault()\n\n        let submitInput = document.getElementById('submit-input')\n        let contentOfInput = submitInput.value\n        let nameOfInput = e.target.name\n\n        console.log( contentOfInput )\n        console.log( nameOfInput )\n\n        this.setState({\n            [nameOfInput]: contentOfInput\n        }, () => { \n            this.addThought()\n        })\n    }\n\n    displayComponent = () => {\n        const { situation, initialThought, pros, cons, balancedThought } = this.state\n\n        if ( situation == '' ) {\n            return <SituationForm \n                        title='Identify the situation (where? when? who?)'\n                        name='situation'\n                        onChange={ this.onChange }\n                        onSubmit={ this.onSubmit }\n                        onClick={ this.onClick }\n                    />\n        } else if ( situation !== '' && initialThought == '' ) {\n            return <InitialThought \n                        title='What thought went through your head initially?'\n                        name='initialThought'\n                        onChange={ this.onChange }\n                        onSubmit={ this.onSubmit }\n                        onClick={ this.onClick }\n                    />\n        } else if ( initialThought !== '' && pros == '' ) {\n            return <Pros \n                        title=\"What is in favour of this thought?\"\n                        name='pros'\n                        onChange={ this.onChange }\n                        onSubmit={ this.onSubmit }\n                        onClick={ this.onClick }\n                    /> \n        } else if ( pros !== '' && cons == '' ) {\n            return <Cons\n                        title=\"What is against this thought?\"\n                        name='cons'\n                        onChange={ this.onChange }\n                        onSubmit={ this.onSubmit }\n                        onClick={ this.onClick }\n                    />\n        } else if ( cons !== '' && balancedThought == '' ) {\n            return <BalancedThought />\n        }\n    }\n\n    render() {\n        return (\n            <div className='text-center float-left mt-5 pt-5 w-100'>\n                { this.displayComponent() }\n            </div>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\n\nimport \"./ThoughtDetangler.scss\"\n\nexport class SituationForm extends Component {\n    render() {\n        const { title, onClick, onChange, name } = this.props\n\n        return (\n            <div className=\"situation-adder mb-4\" >\n                <form className='situation-form text-center'>\n                    <label>\n                        <h4 className=\"title mb-3\"> { title } </h4>\n                        <input \n                            className=\"input-field p-1 mt-3 mb-3\"\n                            type='text'\n                            id='submit-input'\n                            onChange={ onChange }\n                            />\n                        <input \n                            className=\"submit-button m-5\"\n                            type='button'\n                            name={ name }\n                            id='submitButton'\n                            value='Add'\n                            onClick={ onClick }\n                        />\n                    </label>\n                </form>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport \"./ThoughtDetangler.scss\"\n\nexport class InitialThought extends Component {\n    render() {\n        const { title, onSubmit, onClick, onChange, name } = this.props\n\n        return (\n            <div className=\"initial-thought-adder mb-4\">\n                <form className='initial-thought-form'>\n                    <label>\n                        <h4 className=\"title mb-3\"> { title } </h4>\n                        <input \n                            className=\"input-field p-1 mt-3 mb-3\"\n                            id='submit-input'\n                            type='text'\n                            onChange={ onChange }\n                        />\n                        <input \n                            className=\"submit-button m-5\"\n                            type='button'\n                            name={ name }\n                            id='submitButton'\n                            value='Add'\n                            onClick={ onClick }\n                        />\n                    </label>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport \"./ThoughtDetangler.scss\"\n\nexport class Pros extends Component {\n    render() {\n        const { title, onClick, onChange, name  } = this.props\n\n        return (\n            <div className=\"pro-adder mb-4\">\n                <form className='pro-form'>\n                    <label>\n                        <h4 className=\"title mb-3\"> { title } </h4>\n                        <input \n                            className=\"input-field p-1 mt-3 mb-3\"\n                            id='submit-input'\n                            type='text'\n                            onChange={ onChange }\n                        />\n                        <input \n                            className=\"submit-button m-5\"\n                            type='button'\n                            name={ name }\n                            id='submitButton'\n                            value='Add'\n                            onClick={ onClick }\n                        />\n                    </label>\n                </form>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport \"./ThoughtDetangler.scss\"\n\nexport class Cons extends Component {\n    render() {\n        const { title, onClick, onChange, name  } = this.props\n\n        return (\n            <div className=\"con-adder mb-4\">\n                <form className='con-form'>\n                    <label>\n                    <h4 className=\"title mb-3\"> { title } </h4>\n                        <input \n                            className=\"input-field p-1 mt-3 mb-3\"\n                            id='submit-input'\n                            type='text'\n                            onChange={ onChange }\n                        />\n                        <input \n                            className=\"submit-button m-5\"\n                            type='button'\n                            name={ name }\n                            id='submitButton'\n                            value='Add'\n                            onClick={ onClick }\n                        />\n                    </label>\n                </form>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport \"./ThoughtDetangler.scss\"\n\nexport class BalancedThought extends Component {\n    render() {\n        const { title, onChange, onSubmit } = this.props\n\n        return (\n            <div className=\"balanced-thought-adder mb-4\" onSubmit={ onSubmit }>\n                <form className='balanced-thought-form'>\n                    <label>\n                        <h4 className=\"title mb-3\"> { title } </h4>\n                        <input \n                            className=\"input-field p-1 mt-3 mb-3\"\n                            name='balancedThought'\n                            type='text'\n                            onChange={ onChange }\n                        />\n                        <input \n                            className=\"submit-button m-5\"\n                            type='submit'\n                            value='Add'\n                        />\n                    </label>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport './OptionsMenu.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add( faEllipsisV )\n\nexport class OptionsMenu extends Component {\n    render() {\n        const { deleteEntry, editEntry } = this.props;\n\n        return (\n            <div className=\"float-right\">\n                <Dropdown alignRight>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        <FontAwesomeIcon icon={ faEllipsisV } className=\"options-icon\"/>\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <LinkContainer to=\"/\">\n                            <Dropdown.Item onClick={ editEntry }> Edit </Dropdown.Item>\n                        </LinkContainer>\n                        <Dropdown.Item onClick={ deleteEntry }> Delete </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\n\nimport { Route } from \"react-router-dom\";\nimport { Stats, Navigation, Entries, EntryLogger, StartPage } from './components/compIndex.js';\nimport { Awesome, Happy, Okay, Sad, Angry } from './components/compIndex.js';\nimport './App.scss';\n\nlet moodList = [\n    { \n        src: Awesome,\n        activeSrc: Awesome,\n        label: \"Awesome\",\n        color: \"#A2C084\"\n    },\n    { \n        src: Happy,\n        activeSrc: Happy,\n        label: \"Happy\",\n        color: \"#F6EC65\"\n    },\n    { \n        src: Okay,\n        activeSrc: Okay,\n        label: \"Okay\",\n        color: \"#FFBB5B\"\n    },\n    { \n        src: Sad,\n        activeSrc: Sad,\n        label: \"Sad\",\n        color: \"#92AEC7\"\n    },\n    { \n        src: Angry,\n        activeSrc: Angry,\n        label: \"Angry\",\n        color: \"#E36371\"\n    }\n];\n\nlet basicActivities = [\n    { \n        label: \"Work\",\n        num: \"1\",\n        faClass: \"briefcase\"\n    },\n    { \n        label: \"Sport\",\n        num: \"2\",\n        faClass: \"volleyball-ball\"\n    },\n    { \n        label: \"Friends\",\n        num: \"3\", \n        faClass: \"users\"\n    },\n    { \n        label: \"Good meal\",\n        num: \"4\", \n        faClass: \"utensils\"\n    },\n    { \n        label: \"Shopping\",\n        num: \"5\", \n        faClass: \"shopping-cart\"\n    },\n    { \n        label: \"Date\",\n        num: \"6\",\n        faClass: \"heart\"\n    },\n    { \n        label: \"Reading\",\n        num: \"7\", \n        faClass: \"book\"\n    }\n];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            moodList: moodList,\n            chosenMood: null,\n            pickedDate: Date.now(),\n            chosenActivities: [],\n            entryNote: null,\n            entries: null,\n            entryId: null\n        };\n        \n    };\n    \n    chooseMood = e => {\n        const { chosenMood } = this.state;\n        let clickedMood = e.target.id;\n        \n        if ( chosenMood == clickedMood ) {\n            clickedMood = null\n        }\n        \n        this.setState({\n            chosenMood: clickedMood\n        }, () => { \n            console.log( this.state.chosenMood )\n        })\n    };\n\n    //function for getting moodLog from the localStorage\n    getMoodLog = () => JSON.parse(localStorage.getItem( 'moodLog' ));\n    \n    // count how many times a mood item is clicked on\n    moodCounter = () => {\n        const { chosenMood } = this.state;\n        \n        const moodLog = this.getMoodLog();\n        \n        // if mood item in localStorage is the same as the item that is clicked,\n        // ( aka the state ), return it \n        const moodCount = moodLog.filter( e => e.mood === chosenMood )\n        console.log( moodCount.length ) \n    };\n\n    pickActivities = e => {\n        const { chosenActivities } = this.state;\n        \n        let clickedActivity = e.target.id;\n        \n        // Cannot prevent default because event needs to bubble up for bootstrap, instead return\n        // e.preventDefault()\n        if ( clickedActivity === \"\" ) return;\n\n        if ( chosenActivities.includes( clickedActivity ) ) {\n            let uniqueActivities = chosenActivities.filter( activity => {\n                return activity !== clickedActivity\n            })\n\n            this.setState({\n                chosenActivities: uniqueActivities\n            })\n            \n        } else {\n            let updatedActivities = chosenActivities.concat( clickedActivity )\n\n            this.setState({\n                chosenActivities: updatedActivities\n            }, () => {\n                console.log( this.state.chosenActivities )\n            })  \n        }\n    }; \n\n    getColorOfMood = mood => {\n        const { moodList, chosenMood } = this.state;\n\n        const moodContainer = moodList.find( el => el.label === mood )\n\n        if ( !moodContainer ) {\n            return \n        } else {\n            return moodContainer.color\n        }\n    }\n\n    deleteEntry = key => {\n        const moodLog = this.getMoodLog();\n\n        const remainingEntries = moodLog.filter( entry => key !== `${entry.date}_${entry.mood}` )\n\n        const updatedEntries = localStorage.setItem( 'moodLog', JSON.stringify( remainingEntries ))\n\n        this.setState({\n            entries: updatedEntries\n        })\n    }\n\n    editEntry = id => {\n        const { entryId } = this.state;\n        const moodLog = this.getMoodLog();\n\n        return moodLog.find( entry => id == `${entry.date}_${entry.mood}`?\n                                                    this.setState({\n                                                        entryId: id,\n                                                        chosenMood: entry.mood,\n                                                        chosenActivities: entry.activities,\n                                                        entryNote: entry.notes\n                                                    }, () => {\n                                                        console.log( `The mood is ${this.state.chosenMood}, activities are ${this.state.chosenActivities} and the added note is ${this.state.entryNote}` )\n                                                    })  \n                                                : null \n                                        )\n    }\n\n    resetValues = () => {\n        this.setState({\n            chosenMood: null,\n            chosenActivities: []\n        })\n    };\n\n    handleDateChange = date => {\n        this.setState({\n            pickedDate: date\n        })\n    };\n    \n    prepareBarChart = () => {\n        const { moodList } = this.state\n        \n        const moodLog = this.getMoodLog()\n        \n        if ( moodLog === null ) {\n            return moodList.map( entry => {\n                return { x: entry.label, y: 0 }\n            })\n\n            /*\n                if in oneliner you want to return an object, wrap it in '()',\n                otherwise the {} of the object will clash with the {} of the function\n                \n                return moodList.map( entry => ( { x: entry.label, y : 0 } ) )\n            */\n        }\n\n        return moodList.map( entry => {\n            const moods = moodLog.filter( item => {\n                if ( entry.label === item.mood ) {\n                    return true\n                }\n            })\n            \n            return { x: entry.label, y: moods.length }\n        })\n    };\n\n    render() {\n        const { moodList, chosenMood, pickedDate, chosenActivities, entries, entryId, entryNote } = this.state\n\n        return (\n            <div>\n                <Navigation />\n                <Route \n                    exact \n                    path=\"/\" \n                    render={ (props) => \n                        <StartPage \n                        chooseMood={ this.chooseMood } \n                        moodList={ moodList }\n                        chosenMood={ chosenMood }\n                        pickedDate={ pickedDate }\n                        onChange={ this.handleDateChange }\n                        />\n                    } \n                    />\n                {/* <Route \n                    exact \n                    path=\"/thought-detangler\" \n                    render={ (props) => \n                        <ThoughtDetangler />\n                    } \n                /> */}\n                <Route \n                    exact \n                    path=\"/entries\" \n                    render={ (props) => \n                        <Entries \n                            getMoodLog={ this.getMoodLog }\n                            moodList={ moodList }\n                            chosenMood={ chosenMood }\n                            chosenActivities={ chosenActivities }\n                            basicActivities={ basicActivities }\n                            pickedDate={ pickedDate }\n                            getColorOfMood={ this.getColorOfMood }\n                            deleteEntry={ this.deleteEntry }\n                            editEntry={ this.editEntry }\n                        />\n                    } \n                />\n                <Route \n                    path=\"/stats\" \n                    render={ (props) => \n                        <Stats\n                            moodCounter={ this.moodCounter }\n                            moodLog={ this.getMoodLog() }\n                            barData={ this.prepareBarChart() }\n                        />\n                    } \n                />\n\n                <EntryLogger \n                    moodList={ moodList }\n                    chosenMood={ chosenMood }\n                    pickedDate={ pickedDate }\n                    moodCounter={ this.moodCounter }\n                    getMoodLog={ this.getMoodLog }\n                    basicActivities={ basicActivities }\n                    chosenActivities={ chosenActivities }\n                    pickActivities={ this.pickActivities }\n                    resetValues={ this.resetValues }\n                    entries= { entries }\n                    entryId={ entryId }\n                    entryNote={ entryNote }\n                    editEntry={ this.editEntry }\n                />\n                {/* { this.getColorOfMood() } */}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n        <App />\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}